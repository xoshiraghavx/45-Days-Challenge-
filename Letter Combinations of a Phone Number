// O(3^d) || O(3^d)

class Solution {
    public List<String> letterCombinations(String digits) {
        if (digits.length() == 0)
            return new ArrayList<>();
        
        List<String> list = new ArrayList<>();
        list.add("");
        for (int i = 0; i < digits.length(); i++) {
            String letters = getLetters(digits.charAt(i));
            List<String> newList = new ArrayList<>();
            for (String combination : list) {
                for (int j = 0; j < letters.length(); j++) {
                    newList.add(combination + letters.charAt(j));
                }
            }
            list = newList;
        }
        
        return list;
    }
    
    private String getLetters(char digit) {
        switch (digit) {
            case '2':
                return "abc";
            case '3':
                return "def";
            case '4':
                return "ghi";
            case '5':
                return "jkl";
            case '6':
                return "mno";
            case '7':
                return "pqrs";
            case '8':
                return "tuv";
            case '9':
                return "wxyz";
        }
        return "";
    }
    

}
