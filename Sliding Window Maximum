import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.List;

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int n = nums.length;
        int[] result = new int[n - k + 1];
        int resultIndex = 0;
        ArrayDeque<Integer> pq = new ArrayDeque<>();

        for (int i = 0; i < k; i++) {
            while (!pq.isEmpty() && nums[pq.getLast()] <= nums[i]) {
                pq.pollLast();
            }
            pq.offer(i);
        }

        result[resultIndex++] = nums[pq.peek()];

        for (int i = k; i < n; i++) {
            while (!pq.isEmpty() && pq.peek() <= i - k) {
                pq.poll();
            }

            while (!pq.isEmpty() && nums[pq.getLast()] <= nums[i]) {
                pq.pollLast();
            }

            pq.offer(i);
            result[resultIndex++] = nums[pq.peek()];
        }

        return result;
    }
}
